name: Build and Deploy to Prod

on:
  release:
    types:
      - released
  workflow_dispatch:
    inputs:
      target-ref:
        description: The release tag
        required: true
        type: string

concurrency:
  cancel-in-progress: true
  group: admin-build-deploy-prod

permissions:
  id-token: write
  contents: read
  issues: write

jobs:
  ref:
    name: Get target ref
    runs-on: ubuntu-latest
    outputs:
      target-ref: ${{ steps.ref.outputs.ref }}
    steps:
      - id: ref
        name: Select Ref
        run: |
          TARGET_REF="${{ github.event.inputs.target-ref }}"
          # Use shell parameter expansion to provide a default value if input is unset or empty
          # github.ref_name will be used if the input is not provided or empty
          # Remove "refs/heads/" or "refs/tags/" if present in github.ref_name
          TARGET_REF=${TARGET_REF:-$(echo "${{ github.event.release.tag_name }}" | sed 's/refs\/heads\///g' | sed 's/refs\/tags\///g')}

          echo "Target reference: $TARGET_REF"
          echo "ref=$TARGET_REF" >> $GITHUB_OUTPUT

  build-deploy:
    name: Build and Deploy
    uses: ./.github/workflows/_build-deploy.yaml
    needs: ref
    with:
      env-name: prod
      version: ${{ needs.ref.outputs.target-ref }}
      git-ref: ${{ needs.ref.outputs.target-ref }}
    secrets:
      slack-webhook: ${{ secrets.SLACK_WEBHOOK_DEPLOY_TO_PROD }}
      datadog-api-key: ${{ secrets.DATADOG_API_KEY }}

  notify:
    name: Notifications
    needs: [ ref, build-deploy ]
    uses: ./.github/workflows/_notify-jira.yaml
    with:
      env-name: prod
      git-tag: ${{ needs.ref.outputs.target-ref }}
    secrets:
      devops-repo-key: ${{ secrets.DEVOPS_REPO_KEY }}
      jira-api-token: ${{ secrets.JIRA_API_TOKEN }}
      github-pat: ${{ secrets.DEVOPS_GITHUB_TOKEN }}
      slack-webhook: ${{ secrets.SLACK_WEBHOOK_RELEASE_COMMUNICATIONS }}
