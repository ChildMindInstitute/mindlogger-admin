name: CI
on: [pull_request]

#env:
#  NODE_VERSION: 22.15.0

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup node version
        run: |
          echo "NODE_VERSION=$(cat .nvmrc)" >> $GITHUB_ENV

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - uses: actions/cache@v4
        id: cache
        with:
          path: |
            ~/node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}

      - run: npm ci
        if: steps.cache.outputs.cache-hit != 'true'

      - uses: wearerequired/lint-action@v2
        with:
          eslint: true
          eslint_extensions: js,jsx,ts,tsx
          prettier: true
          prettier_extensions: js,jsx,ts,tsx
          continue_on_error: true

  tests:
    needs: lint
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup node version
        run: |
          echo "NODE_VERSION=$(cat .nvmrc)" >> $GITHUB_ENV

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install deps
        run: npm ci

      - name: Running tests
        env:
          REACT_APP_API_DOMAIN: http://localhost:8080
          REACT_APP_WEB_URI: http://localhost:5173
        run: npm run test:nowatch
  build:
    needs: tests
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup node version
        run: |
          echo "NODE_VERSION=$(cat .nvmrc)" >> $GITHUB_ENV

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install deps
        run: npm ci

      - name: Build admin app
        env:
          CI: false
        run: npm run build
